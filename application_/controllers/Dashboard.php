<?phpclass Dashboard extends CI_Controller{    public function __construct(){        parent::__construct();        $this->load->library('pagination');   if($this->session->userdata('is_logged_in')==0){           redirect('login');      }        $this->load->helper(array('url','text','permission','form'));    }    private  function test($data=array()){        echo "<pre>";        print_r($data);        echo "</pre>";        die;    }    private function thumb($data){        $config['image_library'] = 'gd2';        $config['source_image'] =$data['full_path'];        $config['new_image'] = 'uploads/thumbs/'.$data['file_name'];        $config['create_thumb'] = TRUE;        $config['maintain_ratio'] = TRUE;        $config['thumb_marker']='';        $config['width'] = 275;        $config['height'] = 250;        $this->load->library('image_lib', $config);        $this->image_lib->resize();    }    private  function upload_image($file_name){    $config['upload_path'] = 'uploads/images';    $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf';    $config['max_size']    = '1024*8';    $config['encrypt_name']=true;    $this->load->library('upload',$config);    if(! $this->upload->do_upload($file_name)){      return  false;    }else{        $datafile = $this->upload->data();        $this->thumb($datafile);       return  $datafile['file_name'];    }}    private  function upload_file($file_name){        $config['upload_path'] = 'uploads/files';        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf|pdf|PDF|xls|xlsx|mp4|doc|docx|txt|rar|tar.gz|zip';        $config['max_size']    = '1024*8';        $config['overwrite'] = true;        $this->load->library('upload',$config);        if(! $this->upload->do_upload($file_name)){            return  false;        }else {            $datafile = $this->upload->data();            return $datafile['file_name'];        }    }    private function url (){     unset($_SESSION['url']);        $this->session->set_flashdata('url','http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);    } //-----------------------------------------    private function message($type,$text){          if($type =='success') {              return $this->session->set_flashdata('message','<div class="alert alert-success alert-dismissible shadow" ><button type="button" class="close pull-left" data-dismiss="alert">×</button><h4 class="text-lg"><i class="fa fa-check icn-xs"></i> تم بنجاح ...</h4><p>'.$text.'!</p></div>');          }elseif($type=='wiring'){              return $this->session->set_flashdata('message','<div class="alert alert-warning alert-dismissible" ><button type="button" class="close pull-left" data-dismiss="alert">×</button><h4 class="text-lg"><i class="fa fa-exclamation-triangle icn-xs"></i> تحذير هام ...</h4><p>'.$text.'</p></div>');          }elseif($type=='error'){              return  $this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible" ><button type="button" class="close pull-left" data-dismiss="alert">×</button><h4 class="text-lg"><i class="fa fa-exclamation-circle icn-xs"></i> خطآ ...</h4><p>'.$text.'</p></div>');          }        }/** *  ================================================================================================================ *  *  ---------------------------------------------------------------------------------------------------------------- *  * ----------------------------------------------------------------------------------------------------------------- */    public function  index(){                $data['subview'] = 'admin/home';        $this->load->view('index_without_sidebar', $data);    } /** * =============================================================================================================== *  * ========================             ADD USER            ====================================================== *  * =============================================================================================================== */       public function add_users(){      $this->load->model("Users");      $this->load->model("Difined_model");        $data['job_title']=$this->Difined_model->select_search_key('department_jobs','from_id_fk !=',0);        $data['in_users']=$this->Users->select_by_rol_id();        $data['jobs_name']=$this->Users->jobs_id();    if($this->input->post('ADD')){         $this->Users->insert();         redirect('Dashboard/add_users','refresh');    }       $data["record"]=$this->Difined_model->select_all("users","","","user_id","DESC");          $data['subview'] = 'admin/users/add_user';        $this->load->view('admin_index', $data);   }   //----------------------------   public function update_users($id){      $this->load->model("Users");      $this->load->model("Difined_model");         $data['job_title']=$this->Difined_model->select_search_key('department_jobs','from_id_fk !=',0);        $data['in_users']=$this->Users->select_by_rol_id();        $data['jobs_name']=$this->Users->jobs_id();       if($this->input->post('UPDATE')){        $this->Users->update($id);               redirect('Dashboard/add_users','refresh');    }          $data['result']=$this->Users->getById($id);      $data['subview'] = 'admin/users/add_user';        $this->load->view('admin_index', $data);   }   //--------------------------   public function delete($id){     $this->load->model("Difined_model");    $Conditions_arr=array("user_id"=>$id);     $this->Difined_model->delete("users",$Conditions_arr);     redirect('Dashboard/add_users','refresh');   }    /**     *  ========================================================================================================     *     */     public  function GroupsPages(){        $this->load->model('system_management/Groups');        $this->load->model('Difined_model');        if ($this->input->post('add_groupe')) {            $file= $this->upload_image('page_image');            $this->Groups->addGroup($file);            $this->message('success','تمت إضافة المجموعة بنجاح');            redirect('dashboard/GroupsPages', 'refresh');        }        $data["font_icon"]=$this->Difined_model->select_all("font_icons","id","","id","ASC");        $data["groups_table"] = $this->Groups->fetch_groups('', '');        $data['title'] = 'إضافة مجموعة تحكم';        $data['metakeyword'] = 'اعداددات الموقع ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/groups/group';        $this->load->view('admin_index', $data);            }     public function UpdateGroupsPages($id){    $this->load->model('system_management/Groups');    $this->load->model('Difined_model');    $data['result_id'] = $this->Groups->getgroupbyid($id);    if ($this->input->post('edit_groupe')) {        $file= $this->upload_image('page_image');        $this->Groups->updateGroup($id,$file);        $this->message('success','تمت تعديل المجموعة بنجاح');     //   $this->test($this->db->last_query());        redirect('dashboard/GroupsPages', 'refresh');    }    $data["font_icon"]=$this->Difined_model->select_all("font_icons","id","","id","ASC");    $data['title'] = 'تعديل بيانات مجموعة تحكم';    $data['metakeyword'] = 'اعداددات الموقع ';    $data['metadiscription'] = '';    $data['subview'] = 'admin/groups/group';    $this->load->view('admin_index', $data); }   /*  public function DeleteGroupsPages($id){    $this->load->model('Difined_model');    $this->Difined_model->delete("pages",array("page_id"=>$id));    $this->message('success','تم الحذف');    redirect('dashboard/Pages', 'refresh');}*/    public  function AddPages(){  ///system_management        $this->load->model('system_management/Pages');        $this->load->model('system_management/Groups');        $this->load->model('Difined_model');        if ($this->input->post('add_page') ) {            $file= $this->upload_image('page_image');            $this->Pages->insert($file);            $this->message('success','تم اضافة الصفحة بنجاح');            redirect('dashboard/AddPages', 'refresh');        }        $data['pages']=$this->Pages->all_pages();        $data['pages_name']=$this->Pages->main_groups_name();        $data["font_icon"]=$this->Difined_model->select_all("font_icons","id","","id","ASC");        $data["main_groups"]=$this->Groups->level_groups();        $data['title'] = 'إضافة صفحات مجموعات التحكم  ';        $data['metakeyword'] = 'اعداددات الموقع ';        $data['metadiscription'] = 'اعداددات الموقع ';        $data['subview'] = 'admin/groups/pages';        $this->load->view('admin_index', $data);    }  public  function UpdatePages($id){      $this->load->model('system_management/Pages');      $this->load->model('system_management/Groups');      $this->load->model('Difined_model');      $data['page_data'] = $this->Pages->get_by_id($id);      if ($this->input->post('edit_page')) {          $file= $this->upload_image('page_image');          $this->Pages->update($id,$file);          $this->message('success','تم العملية بنجاح');          redirect('dashboard/AddPages', 'refresh');      }      $data['pages']=$this->Pages->all_pages();      $data['pages_name']=$this->Pages->main_groups_name();      $data["font_icon"]=$this->Difined_model->select_all("font_icons","id","","id","ASC");      $data["main_groups"]=$this->Groups->level_groups();      $data['title'] = 'تعديل بيانات صفحات التحكم';      $data['metakeyword'] = 'اعداددات الموقع ';      $data['metadiscription'] = '';      $data['subview'] = 'admin/groups/pages';      $this->load->view('admin_index', $data);//DeletePages  }    public function DeletePages($id){        $this->load->model('Difined_model');        $this->Difined_model->delete("pages",array("page_id"=>$id));        $this->message('success','تم الحذف');        redirect('dashboard/AddPages', 'refresh');    }    public function CreateRole(){        $this->load->model('system_management/Groups');        $this->load->model('system_management/Permission');        $this->load->model('Difined_model');        $data["results_main"]=$this->Groups->get_categories();        $data["user_in"]=$this->Permission->user_in();        if ($this->input->post('add_role')) {            $this->Permission->insert_user_role();            $this->message('success','تم إضافة الدور بنجاح');            redirect('dashboard/CreateRole', 'refresh');        }        $data['users']=$this->Difined_model->select_all("users","user_id","","user_id","ASC");        $data['per_table']=$this->Difined_model->select_all("permissions","user_id","","user_id","DESC");//        $data["user_name"]=$this->Permission->users_name();        $data['title'] = 'إضافة أدوار التحكم';        $data['metakeyword'] = 'إعدادات الموقع ';        $data['metadiscription'] = '';       // $data['subview'] = 'admin/users/roles';        $this->load->view('admin/users/roles', $data);    }    public function UpdateCreateRole($id){        $this->load->model('system_management/Groups');        $this->load->model('system_management/Permission');        $this->load->model('Difined_model');        $data['users']=$this->Difined_model->select_all("users","user_id","","user_id","ASC");        $data["results_main"]=$this->Groups->get_categories();        $data['user_data'] = $this->Difined_model->getByArray("users",array("user_id"=>$id));        $data["user_permations"]=$this->Permission->select_per($id);        if ($this->input->post('edit_role')) {            $this->Difined_model->delete('permissions',array("user_id"=>$id));            $this->Permission->insert_user_role();            $this->message('success','تم التعديل بنجاح');            redirect('dashboard/CreateRole', 'refresh');        }        $data['title'] = 'تعديل دور التحكم';        $data['metakeyword'] = 'اعداددات الموقع ';        $data['metadiscription'] = '';        $this->load->view('admin/users/roles', $data);    }    public function DeleteCreateRole($user_id){        $this->load->model('Difined_model');        $this->Difined_model->delete("permissions",array("user_id"=>$user_id));        $this->message('success','تم الحذف');        redirect('dashboard/CreateRole', 'refresh');    } /** * =============================================================================================================== *  * =============================================================================================================== *  * =============================================================================================================== */  //==========================================================================public function add_city(){    $this->load->model('Departs');    $this->load->model('Difined_model');    if ($this->input->post('add')){        $this->Departs->insert();        $this->message('success','إضافة مدينة');        redirect('dashboard/add_city','refresh');    }    $data['records'] = $this->Difined_model->select_search_key('departments','type',0);    $data['subview'] = 'admin/cities/add_city';    $this->load->view('admin_index', $data);}public function delete_main_depart($id){    $this->load->model('Departs');    $this->Departs->delete($id);    redirect('dashboard/add_city','refresh');}public function update_city($id){    $this->load->model('Departs');    if($this->input->post('update')){        $file_name='img';        $file= $this->upload_image($file_name);        $this->Departs->update($id,$file);        $this->message('success','تعديل مدينة');        redirect('dashboard/add_city','refresh');    }    $data['results']=$this->Departs->getById($id);    $data['subview'] = 'admin/cities/add_city';    $this->load->view('admin_index',$data);}//==========================================================================public function add_neighborhood(){    $this->load->model('Departs');    $this->load->model('Subdepart');    if($this->input->post('add')){        $this->Subdepart->insert();        $this->message('success','إضافة حي');        redirect('dashboard/add_neighborhood','refresh');    }    $data['records']=$this->Subdepart->select(0);    $data['main_depart']=$this->Departs->select_all();    $data['subview'] = 'admin/cities/add_neighborhood';    $this->load->view('admin_index',$data);}public function delete_neighborhood($id){    $this->load->model('Subdepart');    $this->Subdepart->delete($id);    redirect('dashboard/add_neighborhood','refresh');}public function update_neighborhood($id){    $this->load->model('Subdepart');    $this->load->model('Departs');    if($this->input->post('update')){        $this->Subdepart->update($id);        $this->message('success','تعديل حي');        redirect('dashboard/add_neighborhood','refresh');    }    $data['main_depart']=$this->Departs->select_all();    $data['result']=$this->Subdepart->getById($id);    $data['subview'] = 'admin/cities/add_neighborhood';    $this->load->view('admin_index',$data);}    /** * =============================================================================================================== *  * =============================================================================================================== *  * =============================================================================================================== */        public function definitions_devides(){                 $this->load->model('family_models/Devices');          $this->load->model('Difined_model');          $data['records']=$this->Difined_model->select_all('electrical_equipment','','','','');    if($this->input->post('add')){        $this->Devices->insert_device();        redirect('dashboard/definitions_devides','refresh');    }         $data['subview'] = 'admin/definitions/definitions';    $this->load->view('admin_index',$data);     }    //--------------------------------------------  public function update_definitions_devides($id){     $this->load->model('family_models/Devices');      $this->load->model('Difined_model');     $data['results']=$this->Difined_model->getById('electrical_equipment',$id);      if($this->input->post('update')){        $this->Devices->update_device($id);        redirect('dashboard/definitions_devides','refresh');    }      $data['subview'] = 'admin/definitions/definitions';    $this->load->view('admin_index',$data);   } //================================================= public function delete_definitions_devides($id){    $this->load->model('family_models/Devices');    $this->Devices->delete('electrical_equipment',$id); }                            public function add_storage(){        $this->load->model('storage/Storage');        if ($this->input->post('add')){            $this->Storage->insert();            $this->message('success','إضافة مخزن');            redirect('dashboard/add_storage','refresh');        }        $data['records']=$this->Storage->select();           $data['last'] = $this->Storage->select_last();               /* $this->test($data['last']);*/        $data['title'] = 'إضافة مخزن';        $data['metakeyword'] = 'إعدادات مخزن';        $data['metadiscription'] = '';        $data['subview'] = 'admin/Storage/storage';        $this->load->view('admin_index', $data);    }    public function delete_storage($id){        $this->load->model('storage/Storage');        $this->Storage->delete($id);        redirect('dashboard/add_storage');    }    public function update_storage($id){        $this->load->model('storage/Storage');        if($this->input->post('update')){            $this->Storage->update($id);            $this->message('success','تعديل مخزن بنجاح');            redirect('dashboard/add_storage','refresh');        }        $data['results']=$this->Storage->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل مخزن';        $data['metakeyword'] = 'إعدادات المخازن';        $data['metadiscription'] = '';        $data['subview'] = 'admin/Storage/storage';        $this->load->view('admin_index', $data);    }    public function add_unit(){        $this->load->model('storage/Unit');        if ($this->input->post('add')){            $this->Unit->insert();            $this->message('success','إضافة وحدات الاصناف');            redirect('dashboard/add_unit','refresh');        }        $data['records']=$this->Unit->select();        /* $this->test($data['last']);*/        $data['title'] = 'إضافة وحدات الاصناف';        $data['metakeyword'] = 'إعدادات وحدات الاصناف';        $data['metadiscription'] = '';        $data['subview'] = 'admin/Storage/unit';        $this->load->view('admin_index', $data);    }    public function delete_unit($id){        $this->load->model('storage/Unit');        $this->Unit->delete($id);        redirect('dashboard/add_unit');    }    public function update_unit($id){        $this->load->model('storage/Unit');        if($this->input->post('update')){            $this->Unit->update($id);            $this->message('success','تعديل وحدات الاصناف بنجاح');            redirect('dashboard/add_unit','refresh');        }        $data['results']=$this->Unit->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل وحدات الاصناف';        $data['metakeyword'] = 'إعدادات وحدات الاصناف';        $data['metadiscription'] = '';        $data['subview'] = 'admin/Storage/unit';        $this->load->view('admin_index', $data);    }    public function add_main_product(){        $this->load->model('storage/Main_product');        if ($this->input->post('add')){            $this->Main_product->insert();            $this->message('success','إضافة فئة الاصناف الرئيسية');            redirect('dashboard/add_main_product','refresh');        }        $data['records']=$this->Main_product->select();        /* $this->test($data['last']);*/        $data['title'] = 'إضافة فئة الاصناف الرئيسية';        $data['metakeyword'] = 'إعدادات فئة الاصناف الرئيسية';        $data['metadiscription'] = '';        $data['subview'] = 'admin/Storage/main_product';        $this->load->view('admin_index', $data);    }    public function delete_main_product($id){        $this->load->model('storage/Main_product');        $this->Main_product->delete($id);        redirect('dashboard/add_main_product');    }    public function update_main_product($id){        $this->load->model('storage/Main_product');        if($this->input->post('update')){            $this->Main_product->update($id);            $this->message('success','تعديل فئة الاصناف الرئيسية بنجاح');            redirect('dashboard/add_main_product','refresh');        }        $data['results']=$this->Main_product->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل فئة الاصناف الرئيسية';        $data['metakeyword'] = 'إعدادات فئة الاصناف الرئيسية';        $data['metadiscription'] = '';        $data['subview'] = 'admin/Storage/main_product';        $this->load->view('admin_index', $data);    }    /** * =============================================================================================================== *  * =============================================================================================================== *  * =============================================================================================================== */          /** * =============================================================================================================== *  * =============================================================================================================== *  * =============================================================================================================== */    /** * =============================================================================================================== *  * =============================================================================================================== *   * =============================================================================================================== */            public function add_sub_product(){        $this->load->model('storage/Sub_product');        $data['count']=$this->Sub_product->select_count($this->input->post('p_storage_code_fk'));if(isset($data['count'])&&$data['count']!=null){    if ($this->input->post('add')){        $this->Sub_product->insert($data['count'][0]->total);        $this->message('success','إضافة فئة الاصناف الفرعية');        redirect('dashboard/add_sub_product','refresh');    }}else{    if ($this->input->post('add')){        $this->Sub_product->insert1();        $this->message('success','إضافة فئة الاصناف الفرعية');        redirect('dashboard/add_sub_product','refresh');    }}                $data['records']=$this->Sub_product->select();        $data['stores']=$this->Sub_product->select_stores();        $data['main']=$this->Sub_product->select_main_product();        $data['units']=$this->Sub_product->select_units();        $data['title'] = 'إضافة فئة الاصناف الفرعية';        $data['metakeyword'] = 'إعدادات فئة الاصناف الفرعية';        $data['metadiscription'] = '';        $data['subview'] = 'admin/storagee/sub_product';        $this->load->view('admin_index', $data);    }    public function delete_sub_product($id){        $this->load->model('storage/Sub_product');        $this->Sub_product->delete($id);        redirect('dashboard/add_sub_product');    }    public function update_sub_product($id){        $this->load->model('storage/Sub_product');        if($this->input->post('update')){            $this->Sub_product->update($id);            $this->message('success','تعديل فئة الاصناف الفرعية بنجاح');            redirect('dashboard/add_sub_product','refresh');        }        $data['results']=$this->Sub_product->getById($id);        $data['stores']=$this->Sub_product->select_stores();        $data['main']=$this->Sub_product->select_main_product();        $data['units']=$this->Sub_product->select_units();        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل فئة الاصناف الفرعية';        $data['metakeyword'] = 'إعدادات فئة الاصناف الفرعية';        $data['metadiscription'] = '';        $data['subview'] = 'admin/storagee/sub_product';        $this->load->view('admin_index', $data);    }            /**     *      * cars 29-08-2017     *      **/ public function add_insurance(){        $this->load->model('cars/Insurance');        if ($this->input->post('add')){            $this->Insurance->insert();            $this->message('success','إضافة شركات تأمين');            redirect('dashboard/add_insurance','refresh');        }        $data['records']=$this->Insurance->select();        /* $this->test($data['last']);*/        $data['title'] = 'إضافة شركات تأمين';        $data['metakeyword'] = 'إعدادات شركات التأمين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/insurance';        $this->load->view('admin_index', $data);    }    public function delete_insurance($id){        $this->load->model('cars/Insurance');        $this->Insurance->delete($id);        redirect('dashboard/add_insurance');    }    public function update_insurance($id){        $this->load->model('cars/Insurance');        if($this->input->post('update')){            $this->Insurance->update($id);            $this->message('success','تعديل شركات تأمين بنجاح');            redirect('dashboard/add_insurance','refresh');        }        $data['results']=$this->Insurance->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل شركات تأمين';        $data['metakeyword'] = 'إعدادات شركات تأمين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/insurance';        $this->load->view('admin_index', $data);    }    public function add_car(){        $this->load->model('cars/Car');        if ($this->input->post('add')){            $this->Car->insert();            $this->message('success','إضافة انواع السيارات');            redirect('dashboard/add_car','refresh');        }        $data['records']=$this->Car->select();        /* $this->test($data['last']);*/        $data['title'] = 'إضافة انواع السيارات';        $data['metakeyword'] = 'إعدادات انواع السيارات';        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/car';        $this->load->view('admin_index', $data);    }    public function delete_car($id){        $this->load->model('cars/Car');        $this->Car->delete($id);        redirect('dashboard/add_car');    }    public function update_car($id){        $this->load->model('cars/Car');        if($this->input->post('update')){            $this->Car->update($id);            $this->message('success','تعديل انواع السيارات بنجاح');            redirect('dashboard/add_car','refresh');        }        $data['results']=$this->Car->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل انواع السيارات';        $data['metakeyword'] = 'إعدادات انواع السيارات';        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/car';        $this->load->view('admin_index', $data);    }    public function add_car_details(){        $this->load->model('cars/Details');        if ($this->input->post('add')){            $this->Details->insert();            $this->message('success','إضافة بيانات السيارات');            redirect('dashboard/add_car_details','refresh');        }        $data['records']=$this->Details->select();        $data['company']=$this->Details->select_company();        $data['cars']=$this->Details->select_car_type();        if($this->input->post('engine_num_chik')){            $arr["in"]=$this->Details->select_search_key('cars','engine_code',$this->input->post('engine_num_chik'));            $this->load->view('admin/cars/load', $arr);        }else {            $data['title'] = 'إضافة بيانات السيارات';            $data['metakeyword'] = 'إعدادات بيانات السيارات';            $data['metadiscription'] = '';            $data['subview'] = 'admin/cars/details';            $this->load->view('admin_index', $data);        }    }    public function delete_car_details($id){        $this->load->model('cars/Details');        $this->Details->delete($id);        redirect('dashboard/add_car_details');    }    public function update_car_details($id){        $this->load->model('cars/Details');        if($this->input->post('update')){            $this->Details->update($id);            $this->message('success','تعديل بيانات السيارات بنجاح');            redirect('dashboard/add_car_details','refresh');        }        $data['results']=$this->Details->getById($id);        $data['company']=$this->Details->select_company();        $data['cars']=$this->Details->select_car_type();        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل بيانات السيارات';        $data['metakeyword'] = 'إعدادات بيانات السيارات';        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/details';        $this->load->view('admin_index', $data);    }    public function add_driver(){        $this->load->model('cars/Driver');        $data['last']=$this->Driver->select_last();        if ($this->input->post('add')){/*            $this->test($_POST);*/            $this->Driver->insert();            $this->message('success','إضافة سائق');            redirect('dashboard/add_driver','refresh');        }        $data['records']=$this->Driver->select();        /* $this->test($data['last']);*/        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/driver';        $this->load->view('admin_index', $data);    }    public function delete_driver($id){        $this->load->model('cars/Driver');        $this->Driver->delete($id);        redirect('dashboard/add_driver');    }    public function update_driver($id){        $this->load->model('cars/Driver');        if($this->input->post('update')){            $this->Driver->update($id);            $this->message('success','تعديل سائق بنجاح');            redirect('dashboard/add_driver','refresh');        }        $data['results']=$this->Driver->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل انواع السيارات';        $data['metakeyword'] = 'إعدادات انواع السيارات';        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/driver';        $this->load->view('admin_index', $data);    }    public function add_orders_car(){        $this->load->model('cars/Orders');        $data['last']=$this->Orders->select_last();        if ($this->input->post('add')){            $this->Orders->insert();            $this->message('success','إضافة امر تشغيل');            redirect('dashboard/add_orders_car','refresh');        }        $data['records']=$this->Orders->select();        $data['cars']=$this->Orders->select_car_type();        $data['all']=$this->Orders->select_all();        $data['ddd']=$this->Orders->select_driverss();        $data['drivers']=$this->Orders->select_drivers();        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/orders';        $this->load->view('admin_index', $data);    }    public function delete_orders_car($id){        $this->load->model('cars/Orders');        $this->Orders->delete($id);        redirect('dashboard/add_orders_car');    }    public function update_orders_car($id){        $this->load->model('cars/Orders');        if($this->input->post('update')){            $this->Orders->update($id);            $this->message('success','تعديل امر تشغيل بنجاح');            redirect('dashboard/add_orders_car','refresh');        }        $data['results']=$this->Orders->getById($id);        $data["links"] = $this->pagination->create_links();        $data['cars']=$this->Orders->select_car_type();        $data['drivers']=$this->Orders->select_drivers();        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/orders';        $this->load->view('admin_index', $data);    }    public function update_orders_car_return($id){        $this->load->model('cars/Orders');        if($this->input->post('add_return')){            $this->Orders->update_return($id);            $this->message('success',' امر تشغيل بنجاح');            redirect('dashboard/add_orders_car','refresh');        }        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/orders';        $this->load->view('admin_index', $data);    }    /**     *      * cars 30-08-2017     *      **/                  public function add_car_violation(){        $this->load->model('cars/Violation');        $data['last']=$this->Violation->select_last();        if ($this->input->post('add')){            $this->Violation->insert();            $this->message('success','إضافة مخالفة');            redirect('dashboard/add_car_violation','refresh');        }        $data['records']=$this->Violation->select();        $data['cars']=$this->Violation->select_car_type();        $data['drivers']=$this->Violation->select_drivers();        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/violation';        $this->load->view('admin_index', $data);    }    public function delete_car_violation($id){        $this->load->model('cars/Violation');        $this->Violation->delete($id);        redirect('dashboard/add_car_violation');    }    public function update_car_violation($id){        $this->load->model('cars/Violation');        if($this->input->post('update')){            $this->Violation->update($id);            $this->message('success','تعديل مخالفة بنجاح');            redirect('dashboard/add_car_violation','refresh');        }        $data['results']=$this->Violation->getById($id);        $data['cars']=$this->Violation->select_car_type();        $data['drivers']=$this->Violation->select_drivers();        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل انواع السيارات';        $data['metakeyword'] = 'إعدادات انواع السيارات';        $data['metadiscription'] = '';        $data['subview'] = 'admin/cars/violation';        $this->load->view('admin_index', $data);    }        /**     *      *  Car_crash     *      **/          public function car_crash($id){        $this->load->model('cars/Car_crashes');                if($this->input->post('add') && $id == 0){            $this->Car_crashes->insert();            $this->message('success','إضافة الأعطال');            redirect('dashboard/car_crash/0');        }        if($this->input->post('add') && $id != 0){            $this->Car_crashes->update($id);            $this->message('success','تعديل العطل');            redirect('dashboard/car_crash/0');        }        if($id != 0){            $data['cars'] = $this->Car_crashes->select_cars();            $data['result'] = $this->Car_crashes->getById($id);        }         if($this->input->post('count') || $this->input->post('code')){            if($this->input->post('count') != '')                $this->load->view('admin/cars/load_crashes');            if($this->input->post('code') != '')                $this->Car_crashes->delete($this->input->post('code'));        }                else{                $data['cars'] = $this->Car_crashes->select_cars();            $data['last'] = $this->Car_crashes->select();            $data['table'] = $this->Car_crashes->select_all();                           $data['subview'] = 'admin/cars/car_crashes';            $this->load->view('admin_index', $data);        }    }        public function crashes_index(){      $this->load->model('cars/Car_crashes');      $data['cars'] = $this->Car_crashes->select_cars();      $data['table']=$this->Car_crashes->select_all_where(0);      $data['table1']=$this->Car_crashes->select_all_where(1);      $data['table2']=$this->Car_crashes->select_all_where(2);      $data['subview'] = 'admin/cars/crashes_index';      $this->load->view('admin_index', $data);      }    public function crash_status($status,$id){      $this->load->model('cars/Car_crashes');      $this->Car_crashes->update_status($status,$id);      redirect('dashboard/crashes_index');      }    public function R_drivers(){      $this->load->model('cars/Driver');      $data['table']=$this->Driver->select();      $data['subview'] = 'admin/cars/R_drivers';      $this->load->view('admin_index', $data);      }    public function R_driver_status(){      $this->load->model('cars/Car_crashes');      $data['cars'] = $this->Car_crashes->select_cars();      $data['records']=$this->Car_crashes->select_drivers();      $data['table']=$data['records'][0];      $data['order'] = $this->Car_crashes->unordered_cars();      $data['subview'] = 'admin/cars/R_driver_status';      $this->load->view('admin_index', $data);      }    public function R_violation(){      $this->load->model('cars/Car_crashes');      $data['cars'] = $this->Car_crashes->select_cars();      if($this->input->post('date_from') && $this->input->post('date_to') && $this->input->post('car')){        $data['records']=$this->Car_crashes->select_drivers();        $data['drivers']=$data['records'][1];        $data['table'] = $this->Car_crashes->select_violation(strtotime($this->input->post('date_from')),strtotime($this->input->post('date_to')),$this->input->post('car'));        $this->load->view('admin/cars/load_violation',$data);      }      else{          $data['subview'] = 'admin/cars/R_violation';          $this->load->view('admin_index', $data);      }      }    public function R_cars(){      $this->load->model('cars/Car_crashes');      $data['table']=$this->Car_crashes->R_cars();      $data['subview'] = 'admin/cars/R_cars';      $this->load->view('admin_index', $data);      }    public function home_cars(){      $data['subview'] = 'admin/cars/home_cars';      $this->load->view('admin_index', $data);      }/*********************/ public function finance(){     $data['subview'] = 'admin/finance_home';        $this->load->view('admin_index', $data); }public function trasol(){     $data['subview'] = 'admin/trasol/home';        $this->load->view('admin_index', $data); }   public function sub_trasol(){     $data['subview'] = 'admin/trasol/trasol_empolyee';        $this->load->view('admin_index', $data); } }// END CLASS 